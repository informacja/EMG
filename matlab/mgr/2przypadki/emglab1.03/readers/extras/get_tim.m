function Ann = get_tim(FileName)%% Ann = get_tim(FileName)%% Get annotation information from a MUtools .tim file.%% FileName: (String) Name of the time file, with or without the%           '.tim. extension.  If the file is not in the MATLAB%           path, then specify the file name using the complete%           path name.%% Ann:          Annotation structure.  Members are:%               Num:   Motor unit number,%               Time:  Absolute (since begin of file) firing time (samples),%               Start: Absolute begin location of pulse (samples),%               Stop:  Absolute end   location of pulse (samples).% MUtools annotation files are comprised of a series of 10-byte entries,% arranged as:% 1) uint16: motor unit number,% 2) uint32: firing time, in samples since the beginning of the file,% 3) uint16: the firing time minus this value gives the location of%            the first sample in this pulse,% 4) uint16: the firing time plus  this value gives the location of%            the last  sample in this pulse,if nargin ~= 1, error('Must have one argument exactly.'); endLL = length(FileName);if LL<8, error(['".tim" file name "' FileName '" too short.']); endif strcmp(FileName(LL-3:LL), '.tim')~=1, FileName = [FileName '.tim']; end% Open the time file.fid = fopen(FileName, 'r');if fid<0, error(['Can''t open file ' FileName '.']); end% Check that file has a valid length (multiple of ten).fseek(fid, 0, 'eof');                       % Moves to end of file.FileBytes = fliplr( int2str(ftell(fid)) );  % File length (bytes); reversed.if FileBytes(1)~='0', error([FileName ': Length not multiple of 10.']); endfseek(fid, 0, 'bof');                       % Rewind for reading.% Read using four passes (less looping --> more efficient in MATLAB).Ann.Num = fread(fid, 'uint16', 8);      % Reads all MU numbers.fseek(fid, 2, 'bof');                   % Rewind to first time value.Ann.Time = fread(fid, 'uint32', 6);     % Reads all time values.fseek(fid, 6, 'bof');                   % Rewind to first start time.Ann.Start = fread(fid, 'uint16', 8);    % Reads all start times.Ann.Start = max(0, Ann.Time-Ann.Start); % Convert to absolute.fseek(fid, 8, 'bof');                   % Rewind to first stop time.Ann.Stop = fread(fid, 'uint16', 8);     % Reads all stop times.Ann.Stop = Ann.Time + Ann.Stop;         % Convert.  Can be out of range.fclose(fid);return;