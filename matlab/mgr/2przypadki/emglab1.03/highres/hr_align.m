function [p1, a] = hr_align (p1, p2, opt);% High-resolution alignment of p1 with p2.% Copyright (c) 2006-2009. Kevin C. McGill and others.% Part of EMGlab version 1.0.% This work is licensed under the Aladdin free public license.% For copying permissions see license.txt.% email: emglab@emglab.net	[c1, lx, l2] = rtp_to_dft (p1);	if nargin==1;		x2 = zeros (lx, size(p1,2));		ip = ceil ((lx+1)/2);		x2(ip,:) = sign(hr_interp(p1,ip-1));		p2 = rtp(x2);	end;	c2 = rtp_to_dft (p2);		if size(c1,2)==1 & size(c2,2)>1;		c1 = repmat (c1, 1, size(c2,2));	elseif size(c1,2)>1 & size(c2,2)==1;		c2 = repmat (c2, 1, size(c1,2));	end;			om = [0:l2-1];	om2 = om.^2;		if nargin==3;		c = c2.*conj(c1);		p = dft_to_rtp (c, lx);		x = irtp(p);		[b, d] = max(x);		d = (d - 1) * 2 * pi / lx;		d(d>pi) = d(d>pi) - 2*pi;		c1 = c1 .* exp(-j*om'*d);	else;			d = 0;	end;		umax = pi / lx;	tol = umax / 20;	u = 1;	while max(abs(u)) > tol;		c = c1 .* conj(c2);		d1 = om * imag(c);		d2 = om2 * real(c);		u = umax * sign(d1);		i = find(abs(d1)<umax*abs(d2) & d2>=0);		u(i) = d1(i) ./ d2(i);		d = d + u;		c1 = c1 .* exp (-j*om'*u);	end;	a = d * lx / 2 / pi;	p1 = dft_to_rtp (c1, lx);	